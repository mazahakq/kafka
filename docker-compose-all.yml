version: "3.9"

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:5.2.7
#    ports:
#      - "2181:2181"
    volumes:
      - "zookeeper_data_1:/var/lib/zookeeper/data"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888"

  zookeeper-2:
    image: confluentinc/cp-zookeeper:5.2.7
#    ports:
#      - "2181:2181"
    volumes:
      - "zookeeper_data_1:/var/lib/zookeeper/data"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888"

  zookeeper-3:
    image: confluentinc/cp-zookeeper:5.2.7
#    ports:
#      - "2181:2181"
    volumes:
      - "zookeeper_data_1:/var/lib/zookeeper/data"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888"

  kafka-1:
    image: confluentinc/cp-kafka:5.2.7
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
#    ports:
#      - "9092:9092"
    volumes:
      - "kafka_data_1:/var/lib/kafka/data"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1

  kafka-2:
    image: confluentinc/cp-kafka:5.2.7
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
#    ports:
#      - "9092:9092"
    volumes:
      - "kafka_data_2:/var/lib/kafka/data"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 2

  kafka-3:
    image: confluentinc/cp-kafka:5.2.7
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
#    ports:
#      - "9092:9092"
    volumes:
      - "kafka_data_3:/var/lib/kafka/data"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 3

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:5.2.7
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      SCHEMA_REGISTRY_HOST_NAME: "kafka-schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://kafka-schema-registry:8081"
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "8081"]
      timeout: 20s
      retries: 10

  kafka-connect:
    image: mazahakq/kafka-connect:latest 
    build:
      context: ./
      dockerfile: ./kafka-connect/Dockerfile
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "home"
      CONNECT_CONFIG_STORAGE_TOPIC: "home-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "home-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "home-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG
      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars"
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "8083"]
      timeout: 20s
      retries: 10

  kafka-connect-ui:
    image: landoop/kafka-connect-ui:0.9.7
    depends_on:
      - kafka-connect
    ports:
      - "8000:8000"
    environment:
      CONNECT_URL: "http://kafka-connect:8083;DEV,http://kafka-connect:8083;PROD"
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "8000"]
      timeout: 20s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest 
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "8080"]
      timeout: 20s
      retries: 10

  kafka-manager:
    image: mazahakq/kafka-manager:latest 
    build:
      context: ./
      dockerfile: ./kafka-manager/Dockerfile
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "9000:9000"
    environment:
      KAFKA_MANAGER_AUTH_ENABLED: "true"
      KAFKA_MANAGER_USERNAME    : manager
      KAFKA_MANAGER_PASSWORD    : manager
      ZK_HOSTS                  : "zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181"

  mysql:
    image: mysql:8.0.27
    ports:
      - "3306:3306"
    volumes:
      - "mysql_data:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: confluent
      MYSQL_USER: confluent
      MYSQL_PASSWORD: confluent
      MYSQL_DATABASE: confluent
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  adminer:
    image: adminer
    restart: always
    ports:
      - 8070:8080
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "8080"]
      timeout: 20s
      retries: 10

volumes:
  zookeeper_data_1:
    driver: local
  zookeeper_data_2:
    driver: local
  zookeeper_data_3:
    driver: local
  kafka_data_1:
    driver: local
  kafka_data_2:
    driver: local
  kafka_data_3:
    driver: local
  mysql_data:
    driver: local
